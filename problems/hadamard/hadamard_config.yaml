# Parameters for optimization routines
# All parameters must be included
# Extra optimizations can be added as is done in "transfer:"
# Optimizations must be given a unique name as is done in "transfer:"
problem: hadamard

input-states:
  - '0'

state:
  opt-1:
    iters: 30
    acq: 'ucb'
    kappa: 10
    kappa-decay: 1
    decay-delay: 0

transfer:
  opt-1:
    iters: 20
    acq: 'multi_ucb'
    kappa: 2
    kappa-decay: 1
    decay-delay: 0
  opt-2:
    iters: 33
    acq: 'ucb'
    kappa: 1
    kappa-decay: 0.5
    decay-delay: 0
    # Refine reduces the search bounds to a box of length twice the value specified here centred on the current maximum
    # Refinement is done BEFORE the optimization in which it is specified
    refine: 0.01
  opt-3:
    iters: 50
    acq: 'ucb'
    kappa: 0.1
    kappa-decay: 0.5
    decay-delay: 0
    refine: 0.001

control:
  opt-1:
    iters: 40
    acq: 'ucb'
    kappa: 5
    kappa-decay: 0.5
    decay-delay: 10
  opt-2:
    iters: 20
    acq: 'ucb'
    kappa: 1
    kappa-decay: 0.5
    decay-delay: 0
    refine: 0.1
  opt-3:
    iters: 50
    acq: 'ucb'
    kappa: 0.1
    kappa-decay: 0.5
    decay-delay: 0
    refine: 0.01

# Number of initialization iters for state and control optimizers
# These values must be the same for state and contorl to keep the testing fair
state-control-init: 20

# Initialisation for the transfer routine
transfer-init:
    iters: 5
    acq: 'ucb'
    kappa: 1
    xi: 0.0

cost:
  state: 1
  gate: 10

pbounds:
  a1:
    !!python/tuple [0, 2]
  a2:
    !!python/tuple [-2,2]